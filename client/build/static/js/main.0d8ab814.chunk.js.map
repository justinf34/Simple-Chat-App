{"version":3,"sources":["Components/Chat.js","Components/OnlineUsers.js","App.js","Utils/socket.js","reportWebVitals.js","index.js"],"names":["Chat","props","state","messages","msg","show","alert","handleClose","bind","handleOpen","handleChange","handleSubmit","onNewMsgList","onDeniedNameChange","this","setState","window","setTimeout","e","target","value","preventDefault","startsWith","colorChange","nameChange","replaceAll","console","log","message","id","type","socket","sendMessage","msg_list","args","split","length","setAlert","test","changeName","changeColor","msgs_list","forEach","i","push","className","style","color","fontWeight","date","author","panel","scrollTo","scrollHeight","registerNewMsgList","registerDeniedNameChange","scrollToChatBottom","Alert","variant","dismissible","onClose","margin","position","top","left","transform","ref","renderMsgs","Form","onSubmit","Control","placeholder","onChange","Button","Component","OnlineUsers","user_list","onUsersList","onNewUser","onLeaveUser","list","element","li","ListGroupItem","name","unshift","user","prevState","prevProps","splice","findIndex","usr","registerUsersList","registerNewUser","registerLeaveUser","ListGroup","generateUserList","App","server_socket","io","on","data","err","warn","joinRoomID","emit","registerDisconnect","onDisconnect","onDenied","connected","onRetry","fetch","headers","Accept","credentials","method","res","json","cookieValue","document","cookie","find","row","getUserID","then","catch","Fragment","userName","username","user_color","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d8ab814.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [],\n      msg: \"\",\n      show: false,\n      alert: \"\",\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onNewMsgList = this.onNewMsgList.bind(this);\n    this.onDeniedNameChange = this.onDeniedNameChange.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false,\n    });\n  }\n\n  handleOpen() {\n    this.setState({ show: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ show: false });\n      }, 2000);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ msg: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.msg) return;\n\n    let msg = this.state.msg;\n\n    if (msg.startsWith(\"/color\")) {\n      this.colorChange(msg);\n    } else if (msg.startsWith(\"/name\")) {\n      this.nameChange(msg);\n    } else {\n      msg = msg\n        .replaceAll(\":)\", \"😁\")\n        .replaceAll(\":(\", \"🙁\")\n        .replaceAll(\":o\", \"😲\");\n      console.log(\"Sending message: \", msg);\n      //send the socket message here\n      const message = {\n        id: this.props.id,\n        type: 1,\n        message: msg,\n      };\n\n      this.props.socket.sendMessage(message);\n      this.setState({ msg: \"\" });\n    }\n  }\n\n  onNewMsgList(msg_list) {\n    this.setState({\n      messages: msg_list,\n    });\n  }\n\n  setAlert(msg) {\n    this.setState(\n      {\n        show: true,\n        alert: msg,\n        msg: \"\",\n      },\n      () => {\n        window.setTimeout(() => {\n          this.setState({ show: false });\n        }, 2000);\n      }\n    );\n  }\n\n  nameChange(msg) {\n    const args = msg.split(\" \");\n\n    const RegExp = /\\s/g;\n    if (args.length != 2) {\n      console.log(\"Wrong use of /name! Need the right amount of args!\");\n      this.setAlert(\"Wrong use of /name! Need the right amount of args!\");\n    } else {\n      if (RegExp.test(args[1])) {\n        console.log(\"Name must not contain spaces\");\n        this.setAlert(\"Name must not contain spaces\");\n      } else {\n        console.log(\"Changing name....\");\n        this.props.socket.changeName(args[1]);\n        this.setState({ msg: \"\" });\n      }\n    }\n  }\n\n  colorChange(msg) {\n    const args = msg.split(\" \");\n\n    if (args.length != 2) {\n      console.log(\"Wrong use of /color! Need the right amount of args!\");\n      this.setAlert(\"Wrong use of /color! Need the right amount of args!\");\n    } else {\n      const RegExp = /^#([0-9A-F]{6}){1,2}$/i;\n\n      if (RegExp.test(\"#\" + args[1])) {\n        console.log(\"Changing color....\");\n        this.props.socket.changeColor(args[1]);\n        this.setState({ msg: \"\" });\n      } else {\n        console.log(\"Wrong use of /color! Invalid color!\");\n        console.log(\"Wrong use of /color! Invalid color!\");\n        this.setAlert(\"Wrong use of /color! Invalid color!\");\n      }\n    }\n  }\n\n  renderMsgs() {\n    const msgs_list = [];\n    this.state.messages.forEach((msg, i) => {\n      msgs_list.push(\n        <div\n          className=\"chat-message\"\n          key={i}\n          style={{\n            color: \"#\" + msg.color,\n            fontWeight: msg.id === this.props.id ? \"bold\" : \"normal\",\n          }}\n        >\n          {msg.date +\n            \" \" +\n            (msg.type === 0\n              ? msg.id === this.props.id\n                ? \"You \"\n                : msg.author + \" \"\n              : msg.author + \": \") +\n            msg.message}\n        </div>\n      );\n    });\n    return msgs_list;\n  }\n\n  onDeniedNameChange() {\n    console.log(\"Username taken\");\n    this.setAlert(\"Username taken!\");\n  }\n\n  scrollToChatBottom() {\n    this.panel.scrollTo(0, this.panel.scrollHeight);\n  }\n\n  componentDidMount() {\n    const socket = this.props.socket;\n    socket.registerNewMsgList(this.onNewMsgList);\n    socket.registerDeniedNameChange(this.onDeniedNameChange);\n  }\n\n  componentDidUpdate() {\n    this.scrollToChatBottom();\n  }\n\n  render() {\n    console.log(\"Message\", this.state.messages);\n    return (\n      <div className=\"chat-container\">\n        <Alert\n          show={this.state.show}\n          variant=\"danger\"\n          dismissible={true}\n          onClose={this.handleClose}\n          style={{\n            margin: \"auto\",\n            position: \"absolute\",\n            top: \"0%\",\n            left: \"50%\",\n            transform: \"translate(-50%, 0%)\",\n          }}\n        >\n          {this.state.alert}\n        </Alert>\n\n        <div\n          className=\"chat-log\"\n          ref={(panel) => {\n            this.panel = panel;\n          }}\n        >\n          {this.renderMsgs()}\n        </div>\n\n        <Form className=\"chat-input-area\" onSubmit={this.handleSubmit}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type a message..\"\n            value={this.state.msg}\n            onChange={this.handleChange}\n          />\n          <Button type=\"submit\">Send</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\n\nexport default class OnlineUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user_list: [],\n    };\n\n    this.onUsersList = this.onUsersList.bind(this);\n    this.onNewUser = this.onNewUser.bind(this);\n    this.onLeaveUser = this.onLeaveUser.bind(this);\n  }\n\n  generateUserList() {\n    const list = [];\n    this.state.user_list.forEach((element, i) => {\n      let li = (\n        <ListGroupItem className=\"border-0\" key={i}>\n          <div\n            className=\"user-li\"\n            style={{\n              color: \"#\" + element.color,\n              fontWeight: element.id === this.props.id ? \"bold\" : \"normal\",\n            }}\n          >\n            {element.name + (element.id === this.props.id ? \"(You)\" : \"\")}\n          </div>\n        </ListGroupItem>\n      );\n\n      if (element.id === this.props.id) {\n        list.unshift(li);\n      } else {\n        list.push(li);\n      }\n    });\n\n    return list;\n  }\n\n  onUsersList(list) {\n    console.log(\"onUsersList\", list);\n    this.setState({\n      user_list: list,\n    });\n  }\n\n  //TODO: Optimize\n  onNewUser(user) {\n    console.log(\"onNewUser\", user);\n    this.setState((prevState, prevProps) => {\n      prevState.push(user);\n      return {};\n    });\n  }\n\n  // TODO: Optimize\n  onLeaveUser(user) {\n    console.log(\"onLeaveUser\");\n    this.setState((prevState, prevProps) => {\n      prevState.user_list.splice(\n        prevState.user_list.findIndex((usr) => usr.name === user.name),\n        1\n      );\n\n      return {};\n    });\n  }\n\n  componentDidMount() {\n    const socket = this.props.socket;\n    socket.registerUsersList(this.onUsersList);\n    socket.registerNewUser(this.onUsersList);\n    socket.registerLeaveUser(this.onUsersList);\n  }\n\n  //   componentDidUpdate() {\n  //     // we might need this later\n  //   }\n\n  //   componentWillUnmount() {\n  //     // unsubscribe to some event listeners\n  //   }\n\n  render() {\n    return (\n      <div className=\"online-user-container\">\n        <div className=\"online-user-header\">\n          <b>Online users:</b>\n        </div>\n        <div className=\"online-user-list\">\n          <ListGroup>{this.generateUserList()}</ListGroup>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport socket from \"./Utils/socket\";\nimport { Button } from \"react-bootstrap\";\nimport Chat from \"./Components/Chat\";\nimport OnlineUsers from \"./Components/OnlineUsers\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.server_socket = socket();\n    this.state = {\n      connected: false,\n      id: null,\n    };\n\n    this.onRetry = this.onRetry.bind(this);\n    this.onDisconnect = this.onDisconnect.bind(this);\n  }\n\n  async getUserID() {\n    try {\n      const res = await fetch(\"http://localhost:8888/id\", {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        method: \"POST\",\n      });\n\n      const res_json = await res.json();\n\n      // Get value of user name cookie\n      const cookieValue = document.cookie\n        .split(\"; \")\n        .find((row) => row.startsWith(\"user_id\"))\n        .split(\"=\")[1];\n      console.log(\"getUserID: \", cookieValue);\n\n      return cookieValue;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  onRetry() {\n    this.getUserID()\n      .then((id) => {\n        this.server_socket.joinRoomID(id);\n\n        // Register to some event handlers\n\n        this.setState({\n          id: id,\n          connected: true,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onDisconnect() {\n    // Unregister to event handlers\n    this.setState({\n      connected: false,\n    });\n  }\n\n  componentDidMount() {\n    this.getUserID()\n      .then((id) => {\n        this.server_socket.joinRoomID(id);\n\n        // Register to some event handlers\n        this.server_socket.registerDisconnect(this.onDisconnect);\n\n        this.setState({\n          id: id,\n          connected: true,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.id ? (\n          <div className=\"no-connection\">\n            <h3>Cannot connect to the server :^(</h3>\n            <Button onClick={this.onRetry}>Retry</Button>\n          </div>\n        ) : (\n          <React.Fragment>\n            <Chat\n              userName={this.state.username}\n              id={this.state.id}\n              color={this.state.user_color}\n              socket={this.server_socket}\n            />\n\n            <OnlineUsers\n              userName={this.state.username}\n              id={this.state.id}\n              socket={this.server_socket}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import io from \"socket.io-client\";\n\nconst SOCKET_IO_URL = \"http://localhost:8888\";\n\nexport default function () {\n  const socket = io(\"http://localhost:8888\");\n\n  socket.on(\"connect\", (data) => {\n    console.log(\"Connected to the server socket...\");\n  });\n\n  socket.on(\"error\", (err) => {\n    console.warn(\"received socket error: \", err);\n  });\n\n  function joinRoomID(id) {\n    socket.emit(\"joinID\", id);\n  }\n\n  function registerDisconnect(onDisconnect) {\n    socket.on(\"disconnect\", onDisconnect);\n  }\n\n  function registerUsersList(onUsersList) {\n    socket.on(\"usersList\", onUsersList);\n  }\n\n  function registerNewUser(onNewUser) {\n    socket.on(\"newUser\", onNewUser);\n  }\n\n  function registerLeaveUser(onLeaveUser) {\n    socket.on(\"leaveUser\", onLeaveUser);\n  }\n\n  function sendMessage(msg) {\n    socket.emit(\"message\", msg);\n  }\n\n  function registerNewMsgList(onNewMsgList) {\n    socket.on(\"newMessageList\", onNewMsgList);\n  }\n\n  function changeColor(color) {\n    socket.emit(\"color-change\", color);\n  }\n\n  function changeName(name) {\n    socket.emit(\"name-change\", name);\n  }\n\n  function registerDeniedNameChange(onDenied) {\n    socket.on(\"name-change-denied\", onDenied);\n  }\n\n  return {\n    joinRoomID,\n    registerDisconnect,\n    registerUsersList,\n    registerNewUser,\n    registerLeaveUser,\n    registerNewMsgList,\n    sendMessage,\n    changeColor,\n    changeName,\n    registerDeniedNameChange,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}